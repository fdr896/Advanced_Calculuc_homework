char_p = [1 1.03 0.03 20]; % характеристический многочлен
roots(char_p) % его корни

%%
L = [-0.01     0 -20;
         1 -0.02   0;
         0     1   -1]; % матрица, соответствующая уравнению

T = 200;
tau = 0.05;
tspan = 0 : tau : T;

Nstart = 15; % количество точек
rng(19330304); % задаём seed рандома
% генерируем траектори
sx = normrnd(0, 15, Nstart, 1);
sy = normrnd(0, 15, Nstart, 1);
sz = normrnd(0, 15, Nstart, 1);

figure(1);
for k = 1 : Nstart % на каждой итерации строим траекторию
    [t, S] = ode45(@ode_system, tspan, [sx(k), sy(k), sz(k)]);
    plot3(S(:, 1), S(:, 2), S(:, 3), '-k');
    hold on;
end
plot3(0, 0, 0, '*r'); % строим точку, в окрестности которой считаются траектории
plot3(sx, sy, sz, '*g'); % строим конечные точки траекторий
plot3(0, 55, 55, '*b');
view(3);
xlabel('x');
ylabel('y');
zlabel('z');
title('траектории в окрестности (0, 0, 0)');
hold off;

S_0 = [1 55 55]; % стартовая точка
S_p = [S_0 + [0 1 0];
       S_0 + [0 0 1]];
A_p = zeros(2); % матрица линейного оператора
for k = 1 : 2 % делаем итерации метода Пуанкаре
[t, S] = ode45(@ode_system, tspan, S_p(k, :));

half = find(S(:, 1) > 0, 1);
S = S(half:end, :);
one = find(S(:, 1) < 0, 1);
A_p(:, k) = S(one, 2:3) - S_0(2:3);
end
abs(eig(A_p))
