%% объявляем функцию и её производную, а также корни уравнения.
f = @(z) z.^3 - 40*z.^2 + (401-20i)*z + (-20 + 400i);
df = @(z) 3*z.^2 - 80*z + (401-20i);
actual_roots = [20, -1i, 20 + 1i];

%% объявляем точки, в которых будем проверять сходимость метода Ньютона.
[x, y] = meshgrid(linspace(-21, 21, 1000), linspace(-15, 15, 1000));
z = x + 1i*y; %% переводим все точки в комплексный вид.
z = z(:);

%% объявляем массив с результатами работы метода Ньютона.
roots = zeros(length(z), 1);
for k = 1 : length(z)
    try
        %% если метод сошёлся, сохраняем результат в массив.
        roots(k) = newton_method(f, df, z(k));
    catch
        %% иначе, чтобы не график выглядел красивее,
        %% запишем в массив Nan, чтобы для этих точек,
        %% картинка не строилась.
        roots(k) = NaN;
    end
end

%% теперь составим цветовую карту.
color = zeros(length(z), 3);
%% будем пользоватся такими же цветами, как на семинаре
%% -- они достаточно выразительны.
bry = [0.0000, 0.4470, 0.7410;  % синий   -- 1-ый корень.
       0.8500, 0.3250, 0.0980;  % красный -- 2-ой корень.
       0.9290, 0.6940, 0.1250]; % жёлтый  -- 3-ий корень. 
%% покрасим.
for k = 1 : length(actual_roots)
    %% выбираем цвет в зависимости от того,
    %% к какому корню сошёлся метод,
    %% ничего не меняем, если метод не сошёлся.
    i = abs(roots - actual_roots(k)) < 1e-4;
    color(i, :) = repmat(bry(k, :), sum(i), 1);
end

%% построим график.
figure(1);
%% построим бассейны притяжения -- цветовую карту.
scatter(real(z), imag(z), [], color, '.'); hold on;
%% построим сами корни, изобразим в виде крестиков.
plot(real(actual_roots), imag(actual_roots), 'kx', 'MarkerSize', 10); hold off;
%% подпишем оси координат.
xlabel('Re(z)');
ylabel('Im(z)');
%% зададим название.
title('Attraction regions for $f(z) = (z - 20)(z + i)[z - (20 + i)]$', ...
      'Interpreter', 'latex', ...
      'fontweight', 'bold', ...
      'fontsize', 16);
